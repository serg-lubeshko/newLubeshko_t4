# Generated by Django 3.2.9 on 2021-12-24 17:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(choices=[('p', 'Professor'), ('s', 'Student')], default='p', max_length=2, verbose_name='Статус юзера')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название курса')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Опубликовано')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Последние изменения')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author_user', to=settings.AUTH_USER_MODEL, verbose_name='автор курса')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('homework_task', models.TextField(verbose_name='Домашняя работа')),
                ('title', models.CharField(max_length=155, verbose_name='Название домашней работы')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Опубликовано')),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.SmallIntegerField(verbose_name='Оценка')),
            ],
        ),
        migrations.CreateModel(
            name='TeachCour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cou', to='app.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tea', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudCour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution_task', models.URLField(verbose_name='Решение')),
                ('task_solved', models.BooleanField(verbose_name='Задача решена?')),
                ('homework_solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_solution', to='app.homework', verbose_name='Домашняя работа')),
                ('user_solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_solution', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
        ),
        migrations.CreateModel(
            name='MessageTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True, verbose_name='Текстовое сообщение')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Опубликовано')),
                ('mark_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mark_message', to='app.mark', verbose_name='Оценка_ID')),
            ],
        ),
        migrations.AddField(
            model_name='mark',
            name='solution',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mark_solution', to='app.solution', verbose_name='Решение'),
        ),
        migrations.AddField(
            model_name='mark',
            name='user_mark',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_mark', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название лекции')),
                ('file_present', models.FileField(blank=True, upload_to='files/%Y/%m/%d/', verbose_name='Презентация')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='Опубликовано')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='app.course', verbose_name='Курс')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professor', to=settings.AUTH_USER_MODEL, verbose_name='Автор лекции')),
            ],
        ),
        migrations.AddField(
            model_name='homework',
            name='lecture_for_homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_for_homework', to='app.lecture', verbose_name='Лекция'),
        ),
        migrations.AddField(
            model_name='homework',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professor_lec', to=settings.AUTH_USER_MODEL, verbose_name='Автор лекции'),
        ),
        migrations.AddField(
            model_name='course',
            name='student',
            field=models.ManyToManyField(related_name='student', through='app.StudCour', to=settings.AUTH_USER_MODEL, verbose_name='студент курса'),
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ManyToManyField(related_name='teacher', through='app.TeachCour', to=settings.AUTH_USER_MODEL, verbose_name='соавтор курса'),
        ),
    ]
